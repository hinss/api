package v1

import (
	"gorm.io/gorm"
	"gorm.io/plugin/soft_delete"
	"time"
)

// ObjectMeta is metadata that all persisted resources must have, which includes all objects
// ObjectMeta is also used by gorm.
type ObjectMeta struct {
	// ID is the unique in time and space value for this object. It is typically generated by
	// the storage on successful creation of a resource and is not allowed to change on PUT
	// operations.
	//
	// Populated by the system.
	// Read-only.
	Id int `json:"id,omitempty" gorm:"primary_key;AUTO_INCREMENT;column:id"`

	// CreatedAt is a timestamp representing the server time when this object was
	// created. It is not guaranteed to be set in happens-before order across separate operations.
	// Clients may not set this value. It is represented in RFC3339 form and is in UTC.
	//
	// Populated by the system.
	// Read-only.
	// Null for lists.
	AddTime time.Time `json:"addTime,omitempty" gorm:"column:add_time"`

	// UpdatedAt is a timestamp representing the server time when this object was updated.
	// Clients may not set this value. It is represented in RFC3339 form and is in UTC.
	//
	// Populated by the system.
	// Read-only.
	// Null for lists.
	UpdateTime time.Time `json:"updateTime,omitempty" gorm:"column:update_time"`

	// IsDeleted represented a record delete status
	IsDeleted soft_delete.DeletedAt `json:"isDeleted" gorm:"column:is_deleted;softDelete:flag"`

}

func (o *ObjectMeta) BeforeUpdate(db *gorm.DB) error {
	o.UpdateTime = time.Now()

	return nil
}

func (o *ObjectMeta) BeforeCreate(db *gorm.DB) error {
	o.AddTime = time.Now()
	o.UpdateTime = time.Now()

	return nil
}








